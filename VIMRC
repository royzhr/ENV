set nocompatible              " be iMproved, required
filetype off                  " required
syntax enable

"set hlsearch "搜索高亮

"记录上次编辑的位置
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" git repos on your local machine (i.e. when working on your own plugin)
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'taglist.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'taghighlight'
Plugin 'brookhong/cscope.vim'
" Plugin 'kien/ctrlp.vim'
"Plugin 'Yggdroot/indentLine'
"Plugin 'Yggdroot/LeaderF'
Plugin 'tczengming/autoload_cscope.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

set tabstop=4
set shiftwidth=4
set expandtab

set number
set mouse=a
set laststatus=2	"显示文件名
set cursorline

"syntax keyword Type u_char
"syn keyword cType u_char

color default
hi Comment ctermfg=28
hi GlobalVariable ctermfg=2
hi Type ctermfg=105
hi Function ctermfg=75
hi DefinedName ctermfg=130
hi EnumerationValue ctermfg=133
hi Statement ctermfg=215
"hi Repeat ctermfg=214
"hi Operator ctermfg=214
"hi Exception ctermfg=214
hi Label ctermfg=216
hi Todo ctermfg=124 ctermbg=11
hi Error ctermbg=200
hi MatchParen ctermbg=166
hi Directory ctermfg=212
hi Visual ctermbg=19 guibg=LightGrey
hi TagListTagName ctermbg=90 ctermfg=7

hi LineNr ctermfg=246
hi CursorLineNr cterm=none ctermfg=76 gui=bold guifg=Brown
"hi TagListTagName term=reverse ctermfg=226 ctermbg=239 guibg=Yellow
hi CursorLine cterm=none ctermbg=235 guibg=Grey90
hi Search ctermbg=85 ctermfg=16
hi CTagsMember ctermfg=7

set tags=tags;
set autochdir

let Tlist_Show_One_File=1    "只显示当前文件的tags
let Tlist_WinWidth=48        "设置taglist宽度b
let Tlist_Exit_OnlyWindow=1  "tagList窗口是最后一个窗口，则退出Vim

let NERDTreeWinPos="left"
let NERDTreeWinSize=28      "设置NERD的宽度
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
"设置树的显示图标
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

"链接脚本 高亮
au BufRead,BufNewFile *.lds setfiletype ld


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" cscope 自动加载cscope.out文件
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("cscope")
set csprg=/usr/bin/cscope
set csto=0
set cst
set csverb
set cspc=3
"add any database in current dir
if filereadable("cscope.out")
cs add cscope.out
"else search cscope.out elsewhere
else
let cscope_file=findfile("cscope.out",".;")
let cscope_pre=matchstr(cscope_file,".*/")
if !empty(cscope_file) && filereadable(cscope_file)
set nocsverb
exe "cs add" cscope_file cscope_pre
set csverb
endif
endif
endif
